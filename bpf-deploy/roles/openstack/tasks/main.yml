---
- name: check old installer for openstack
  shell: |
      (ps -ef | grep  "puppet.*packstack" | grep -v grep) && exit 1 || echo OK ;

- file:
    path: /root/deps
    state: directory
    mode: 0755

# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux_OpenStack_Platform/3/html/Getting_Started_Guide/appe-Getting_Started_Guide-Removing_PackStack_Deployments.html
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux_OpenStack_Platform/6/html/Deploying_OpenStack_Proof_of_Concept_Environments/chap-Removing_Packstack_Deployments.html
- name: copy uninstall script
  copy: src={{ item }} dest=/root/ mode="0755"
  with_fileglob:
    - tools/*

#####################################################
# install centos-release-openstack-liberty
- name: install yum repo for centos-release-openstack-liberty
  environment: "{{ proxy_env }}"
  yum:
    name: centos-release-openstack-liberty
    state: present

# install packstack
- name: install openstack-packstack
  environment: "{{ proxy_env }}"
  yum:
    name: openstack-packstack
    state: present
- name: check packstack version
  shell: packstack --version | awk '{print $1, $2}'
  register: packstack_version
- debug:
    msg: "{{ packstack_version.stdout }}"
- fail:
    msg: "packstack version should be 'Liberty'"
  when: packstack_version.stdout != "packstack Liberty"


- name: update mariadb-libs
  shell: yum update -y mariadb-libs


# install memcached service and patch systemd config for memcached
# - name: install memcached
#   yum:
#     name: memcached
#     state: present
# - name: patch /usr/lib/systemd/system/memcached.service
#   shell: grep "#MemoryDenyWriteExecute=" /usr/lib/systemd/system/memcached.service ||(sed -i 's/^MemoryDenyWriteExecute=/#MemoryDenyWriteExecute=/' /usr/lib/systemd/system/memcached.service; systemctl daemon-reload; systemctl restart memcached)

###################################
#generate answer.txt
- name: generate answer.txt
  shell: packstack --gen-answer-file=/root/deps/answer.txt
  args:
    creates: /root/deps/answer.txt

- name: update answer.txt
  shell: |
    sed -i "s/CONFIG_CONTROLLER_HOST=.*/CONFIG_CONTROLLER_HOST={{ config_controller_host }}/g" answer.txt
    sed -i "s/CONFIG_NETWORK_HOSTS=.*/CONFIG_NETWORK_HOSTS={{ config_network_hosts }}/g" answer.txt
    sed -i "s/CONFIG_NOVA_NETWORK_PUBIF=.*/CONFIG_NOVA_NETWORK_PUBIF={{ config_nova_network_pubif }}/g" answer.txt
    sed -i "s/CONFIG_NOVA_NETWORK_PRIVIF=.*/CONFIG_NOVA_NETWORK_PRIVIF={{ config_nova_network_privif }}/g" answer.txt
    sed -i "s/CONFIG_NEUTRON_OVS_TUNNEL_IF=.*/CONFIG_NEUTRON_OVS_TUNNEL_IF={{ config_neutron_ovs_tunnel_if }}/g" answer.txt
    sed -i "s/CONFIG_KEYSTONE_REGION=.*/CONFIG_KEYSTONE_REGION={{ config_keystone_region }}/g" answer.txt
    sed -i "s/CONFIG_PROVISION_DEMO=.*/CONFIG_PROVISION_DEMO={{ config_provision_demo }}/g" answer.txt
    sed -i "s/CONFIG_SWIFT_INSTALL=.*/CONFIG_SWIFT_INSTALL={{ config_swift_install }}/g" answer.txt
    sed -i "s/CONFIG_NAGIOS_INSTALL=.*/CONFIG_NAGIOS_INSTALL={{ config_nagios_install }}/g" answer.txt
    sed -i "s/CONFIG_LBAAS_INSTALL=.*/CONFIG_LBAAS_INSTALL={{ config_lbaas_install }}/g" answer.txt
    sed -i "s/CONFIG_NEUTRON_FWAAS=.*/CONFIG_NEUTRON_FWAAS={{ config_neutron_fwaas }}/g" answer.txt
    sed -i "s/CONFIG_NOVA_INSTALL=.*/CONFIG_NOVA_INSTALL={{ config_nova_install }}/g" answer.txt
    sed -i "s/CONFIG_CEILOMETER_INSTALL=.*/CONFIG_CEILOMETER_INSTALL={{ config_ceilometer_install }}/g" answer.txt
    sed -i "s/CONFIG_GLANCE_INSTALL=.*/CONFIG_GLANCE_INSTALL={{ config_glance_install }}/g" answer.txt
    sed -i "s/CONFIG_HORIZON_INSTALL=.*/CONFIG_HORIZON_INSTALL={{ config_horizon_install }}/g" answer.txt
    sed -i "s/CONFIG_LBAAS_INSTALL=.*/CONFIG_LBAAS_INSTALL={{ config_lbaas_install }}/g" answer.txt
  args:
    chdir: /root/deps/

- name: run packstack if '/root/deps/packstack.ok' not exist
  environment: "{{ proxy_env }}"
  shell: |
    echo "===========================";
    env;
    echo "===========================";
    cp /root/deps/answer.txt /root/deps/answer.txt.orig
    echo "===========================";
    packstack --answer-file=/root/deps/answer.txt && touch /root/deps/packstack.ok
  args:
    chdir: /root
    creates: /root/deps/packstack.ok


# - name: patch /usr/lib/systemd/system/neutron-server.service
#   shell: grep 'TimeoutStartSec="infinity"' /usr/lib/systemd/system/neutron-server.service && (sed -i 's/^TimeoutStartSec="infinity"/TimeoutStartSec=0/' /usr/lib/systemd/system/neutron-server.service; systemctl daemon-reload; systemctl restart neutron-server) || echo neutron-server.service was patched
#

# ## Create external network
# - name: add -x filemode to /root/keystonerc_admin
#   file:
#     path: /root/keystonerc_admin
#     mode: 0700
# - name: check ext_network
#   shell: . /root/keystonerc_admin && neutron net-list | grep 'br\-ex' | wc -l
#   register: ext_network
# - debug: msg={{ ext_network.stdout }}
#
# - name: create ext_network
#   shell: . /root/keystonerc_admin && neutron net-create --router:external br-ex
#   when: ext_network.stdout == "0"
#
# ## Configure neutron-server
# - name: config neutron-server
#   copy:
#     src: etc/neutron.conf
#     dest: /etc/neutron.conf
#
# ## install openstack-neutron-openvswitch
# - name: install openstack-neutron-openvswitch
#   environment: "{{ proxy_env }}"
#   yum:
#     name: openstack-neutron-openvswitch
#     state: present
# - name: start openvswitch service
#   service:
#     name: openvswitch
#     state: started
#     enabled: yes

- name: check openstack status
  shell: openstack-status
