---
- file:
    path: /root/deps
    state: directory
    mode: 0755

# install rdo-release.rpm
- name: copy rdo-release.rpm
  copy:
    src: rpm/rdo-release.rpm
    dest: /root/deps/rdo-release.rpm
- name: install rdo-release.rpm
  yum:
    name: /root/deps/rdo-release.rpm
    state: present


# - copy: src=tools/uninstall1.sh dest=/root/uninstall1.sh
# - copy: src=tools/uninstall2.sh dest=/root/uninstall2.sh
- name: copy uninstall script
  copy: src={{ item }} dest=/root/ mode="0755"
  with_fileglob:
    - tools/*


- name: fix yum issue
  shell: yum-complete-transaction --cleanup-only && yum history redo last -y
  environment: "{{proxy_env}}"

- name: install dependency package
  yum:
    name: "{{ item }}"
    state: present
  environment: "{{proxy_env}}"
  with_items:
    - bootswatch-fonts
    - erlang
    - erlang-gs
    - fontawesome-fonts
    - fontawesome-fonts-web
    - fontconfig
    - iscsi-initiator-utils-iscsiuio
    - libXft
    - mdi-fonts
    - mod_wsgi
    - python-XStatic-Font-Awesome
    - python-ceilometerclient
    - python-heatclient
    - python-neutronclient
    - python-saharaclient
    - python-troveclient
    - python2-XStatic-bootswatch
    - python2-XStatic-mdi
    - python2-XStatic-roboto-fontface
    - roboto-fontface-fonts
    - tk


- name: install centos-release-openstack-liberty package
  yum:
    name: "{{ item }}"
    state: present
  environment: "{{proxy_env}}"
  with_items:
    - centos-release-openstack-liberty

- name: update via yum
  shell: yum update -y


- name: install openstack-packstack package
  yum:
    name: "{{ item }}"
    state: present
  environment: "{{proxy_env}}"
  with_items:
    - openstack-packstack


- name: install openstack package
  yum:
    name: "{{ item }}"
    state: present
  environment: "{{proxy_env}}"
  with_items:
    - fontpackages-filesystem
    - httpd
    - iscsi-initiator-utils
    - memcached
    - redis
    - ntp
    - ntpdate
    - perl-DBD-MySQL
    - perl-DBI
    - puppet
    - python-cinder
    - python-cinderclient
    - python-glance
    - python-glance-store
    - python-glanceclient
    - python-keystone
    - python-keystoneclient
    - python-keystonemiddleware
    - python-memcached
    - python-novaclient
    - python-openstackclient
    - python-swiftclient
    - python2-django-openstack-auth
    # - openstack-cinder
    # - openstack-glance
    # - openstack-keystone
    # - openstack-packstack
    # - openstack-packstack-puppet
    # - openstack-puppet-modules
    # - openstack-selinux
    # - openstack-utils


#generate my_answer.txt
- name: generate my_answer.txt
  template:
    src: my_answer.txt
    dest: /root/deps/my_answer.txt
  tags:
   - generate-my_answer.txt


#run install openstack(logfile: /var/tmp/packstack/latest/openstack-setup.log, longtime to install)
# run 'yum remove -y mariadb-server' if packstack install failed
# run `tail -f /var/tmp/packstack/latest/openstack-setup.log` to view log
- name: run packstack if '/root/deps/packstack.ok' not exist
  shell: env; ((rpm -qa | grep mariadb-server) && yum remove -y mariadb-server || echo mariadb-server not installed) && (packstack --answer-file=/root/deps/my_answer.txt && touch /root/deps/packstack.ok)
  args:
    creates: /root/deps/packstack.ok
  environment: "{{proxy_env}}"

- name: install sshpass
  yum:
    name: sshpass
    state: present

#install oslo.i18n(fix "ImportError: cannot import name _lazy")
- name: install oslo.i18n
  pip:
    name: oslo.i18n
    version: 3.4.0

#create ext_network
- name: add -x filemode to /root/keystonerc_admin
  file:
    path: /root/keystonerc_admin
    mode: 0700
- name: check ext_network
  shell: . /root/keystonerc_admin && neutron net-list | grep 'br\-ex' | wc -l
  register: ext_network
- debug: msg={{ ext_network.stdout }}

- name: create ext_network
  shell: . /root/keystonerc_admin && neutron net-create --router:external br-ex
  when: ext_network.stdout == "0"

#config neutron-server
- name: config neutron-server
  copy:
    src: etc/neutron.conf
    dest: /etc/neutron.conf

#install openstack-neutron-openvswitch and iptables
- name: install openstack-neutron-openvswitch and iptables
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - openstack-neutron-openvswitch
    - iptables-services

- name: start iptables service
  service:
    name: iptables
    state: started
    enabled: yes

- name: start openvswitch service
  service:
    name: openvswitch
    state: started
    enabled: yes

- name: check openstack status
  shell: openstack-status
